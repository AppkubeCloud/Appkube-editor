{"version":3,"file":"module.js","mappings":";;;;;;;;;;;;;;;;;;AAAO,IAAKA,gBAAgB;AAG3B,WAHWA,gBAAgB;EAAhBA,gBAAgB,CAAhBA,gBAAgB;EAAhBA,gBAAgB,CAAhBA,gBAAgB;AAAA,GAAhBA,gBAAgB,KAAhBA,gBAAgB;AAKrB,MAAMC,aAAa,GAAG,CACzB;EAAEC,KAAK,EAAE,MAAM;EAAEC,KAAK,EAAE;AAAO,CAAC,EAChC;EAAED,KAAK,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAQ,CAAC,CACrC;AAEM,MAAMC,mBAAmB,GAAG,CAC/B;EAAEF,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAEH,gBAAgB,CAACK;AAAQ,CAAC,EACrD;EAAEH,KAAK,EAAE,MAAM;EAAEC,KAAK,EAAEH,gBAAgB,CAACM;AAAK,CAAC,CAClD;AAEM,MAAMC,qBAAqB,GAAG,SAAAA,CAAUC,EAAO,EAAEC,YAAiB,EAAEC,OAAe,EAAE;EACxF,OAAO;IACH,qBAAqB,EAAED,YAAY,CAACE,YAAY;IAChD,MAAM,EAAE,aAAa;IACrB,WAAW,EAAE,SAAS;IACtB,YAAY,EAAE,IAAI;IAClB,YAAY,EAAE,EAAE;IAChB,IAAI,EAAE,EAAE;IACR,OAAO,EAAE,EAAE;IACX,QAAQ,EAAE,EAAE;IACZ,MAAM,EAAE,EAAE;IACV,YAAY,EAAE,EAAE;IAChB,qBAAqB,EAAE,EAAE;IACzB,aAAa,EAAEF,YAAY,CAACG,WAAW;IACvC,WAAW,EAAEC,QAAQ,CAACL,EAAE,EAAE,EAAE,CAAC;IAC7B,mBAAmB,EAAEC,YAAY,CAACK,UAAU;IAC5C,SAAS,EAAEJ,OAAO;IAClB,cAAc,EAAED,YAAY,CAACM;EACjC,CAAC;AACL,CAAC;AAGM,MAAMC,SAAS,GAAGA,CAACC,SAAiB,EAAEC,GAAW,KAAK;EACzD,IAAI,CAACA,GAAG,EAAE;IACNA,GAAG,GAAGC,QAAQ,CAACC,IAAI;EACvB;EACAH,SAAS,GAAGA,SAAS,CAACI,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CAACA,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC;EACrE,MAAMC,MAAM,GAAG,QAAQ,GAAGL,SAAS,GAAG,WAAW;EACjD,MAAMM,KAAK,GAAG,IAAIC,MAAM,CAACF,MAAM,CAAC;EAChC,MAAMG,OAAO,GAAGF,KAAK,CAACG,IAAI,CAACR,GAAG,CAAC;EAC/B,OAAOO,OAAO,IAAI,IAAI,GAAG,EAAE,GAAGA,OAAO,CAAC,CAAC,CAAC;AAC5C,CAAC;;;;;;;;;;;;;;;;;;AC9C0C;AACM;AAM1C,SAASK,YAAYA,CAACC,KAAY,EAAE;EACzC,MAAM;IAAEC,eAAe;IAAEC;EAAQ,CAAC,GAAGF,KAAK;EAE1C,MAAMG,iBAAiB,GAAIC,KAAoC,IAAK;IAClE,MAAMC,QAAQ,GAAAC,MAAA,CAAAC,MAAA,KACTL,OAAO,CAACG,QAAQ;MACnBG,YAAY,EAAEJ,KAAK,CAACK,MAAM,CAACrC;IAAK,EACjC;IACD6B,eAAe,CAAAK,MAAA,CAAAC,MAAA,KAAML,OAAO;MAAEG;IAAQ,GAAG;EAC3C,CAAC;EAED,MAAMK,iBAAiB,GAAIN,KAAoC,IAAK;IAClE,MAAMC,QAAQ,GAAAC,MAAA,CAAAC,MAAA,KACTL,OAAO,CAACG,QAAQ;MACnBM,eAAe,EAAEP,KAAK,CAACK,MAAM,CAACrC;IAAK,EACpC;IACD6B,eAAe,CAAAK,MAAA,CAAAC,MAAA,KAAML,OAAO;MAAEG;IAAQ,GAAG;EAC3C,CAAC;EAED,MAAMO,mBAAmB,GAAIR,KAAoC,IAAK;IACpE,MAAMC,QAAQ,GAAAC,MAAA,CAAAC,MAAA,KACTL,OAAO,CAACG,QAAQ;MACnBQ,YAAY,EAAET,KAAK,CAACK,MAAM,CAACrC;IAAK,EACjC;IACD6B,eAAe,CAAAK,MAAA,CAAAC,MAAA,KAAML,OAAO;MAAEG;IAAQ,GAAG;EAC3C,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM;IAAEA;EAAS,CAAC,GAAGH,OAAO;EAC5B;EACA;;EAEA,oBACEN,0DAAA;IAAKmB,SAAS,EAAC;EAAe,gBAC5BnB,0DAAA,CAACC,oDAAW;IAAC1B,KAAK,EAAC,kBAAkB;IAAC6C,UAAU,EAAE;EAAG,gBACnDpB,0DAAA,CAACE,8CAAK;IACJmB,QAAQ,EAAEP,iBAAkB;IAC5BtC,KAAK,EAAEiC,QAAQ,CAACM,eAAe,IAAI,EAAG;IACtCO,WAAW,EAAC,uBAAuB;IACnCC,KAAK,EAAE;EAAG,EACV,CACU,eAWdvB,0DAAA,CAACC,oDAAW;IAAC1B,KAAK,EAAC,mBAAmB;IAAC6C,UAAU,EAAE;EAAG,gBACpDpB,0DAAA,CAACE,8CAAK;IACJmB,QAAQ,EAAEL,mBAAoB;IAC9BxC,KAAK,EAAEiC,QAAQ,CAACQ,YAAY,IAAI,EAAG;IACnCK,WAAW,EAAC,gCAAgC;IAC5CC,KAAK,EAAE;EAAG,EACV,CACU,eACdvB,0DAAA,CAACC,oDAAW;IAAC1B,KAAK,EAAC,mBAAmB;IAAC6C,UAAU,EAAE;EAAG,gBACpDpB,0DAAA,CAACE,8CAAK;IACJmB,QAAQ,EAAEd,iBAAkB;IAC5B/B,KAAK,EAAEiC,QAAQ,CAACG,YAAY,IAAI,EAAG;IACnCU,WAAW,EAAC,gCAAgC;IAC5CC,KAAK,EAAE;EAAG,EACV,CACU,CACV;AAEV;;;;;;;;;;;;;;;;;;;;;ACpGwE;AACf;AAInC;AACwC;AACxB;AAE/B,SAASS,WAAWA,CAAAC,IAAA,EAAmD;EAAA,IAAlD;IAAEC,KAAK;IAAEb,QAAQ;IAAEc,UAAU;IAAEC;EAAgB,CAAC,GAAAH,IAAA;EAC1E,MAAMI,YAAY,GAAG,CAAC;IACpB9D,KAAK,EAAE,KAAK;IACZC,KAAK,EAAE;EACT,CAAC,CAAC;EACF,MAAM8D,OAAO,GAAG,IAAIP,8CAAQ,CAACK,UAAU,CAACG,IAAI,CAAC9B,QAAQ,CAACQ,YAAY,IAAI,EAAE,EAAEmB,UAAU,CAACG,IAAI,CAAC9B,QAAQ,CAACM,eAAe,IAAI,EAAE,CAAC;EACzH,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAGf,+CAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,+CAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,+CAAQ,CAAyB,CAAC,CAAC,CAAC;EACtE,MAAM,CAACoB,MAAM,EAAEC,SAAS,CAAC,GAAGrB,+CAAQ,CAACW,YAAY,CAAC;EAClD,MAAMW,SAAS,GAAGvB,6CAAM,CAAC,KAAK,CAAC;EAE/B,MAAMwB,gBAAgB,GAAGtB,kDAAW,CAAC,CAAC9C,EAAU,EAAEqD,KAAU,KAAK;IAC/DI,OAAO,CAACW,gBAAgB,CAACpE,EAAE,CAAC,CAACqE,IAAI,CAAEC,GAAQ,IAAK;MAC9C,IAAIA,GAAG,IAAIA,GAAG,CAAC,CAAC,CAAC,EAAE;QACjB,MAAMrE,YAAY,GAAGqE,GAAG,CAAC,CAAC,CAAC;QAC3B,IAAIrE,YAAY,EAAE;UAChB,MAAMsE,iBAAiB,GAAGxE,iEAAqB,CAACC,EAAE,EAAEC,YAAY,EAAEsD,UAAU,CAACG,IAAI,CAAC9B,QAAQ,CAACG,YAAY,IAAI,EAAE,CAAC;UAC9GsB,KAAK,GAAAxB,MAAA,CAAAC,MAAA,KACAuB,KAAK,EACLkB,iBAAiB,CACrB;UACD/B,QAAQ,CAAAX,MAAA,CAAAC,MAAA,KAAMuB,KAAK,EAAG;UACtBI,OAAO,CAACe,kBAAkB,CAACvE,YAAY,CAACG,WAAW,CAACqE,WAAW,EAAE,EAAE,KAAK,CAAC,CAACJ,IAAI,CAAEC,GAAG,IAAK;YACtF,IAAIA,GAAG,IAAIA,GAAG,CAACI,MAAM,GAAG,CAAC,EAAE;cACzB,MAAMC,MAAW,GAAG,EAAE;cACtB,MAAMV,MAAW,GAAG,CAAC,CAAC;cACtBK,GAAG,CAACM,GAAG,CAAEC,KAAU,IAAK;gBACtBF,MAAM,CAACG,IAAI,CAAC;kBACVpF,KAAK,EAAEmF,KAAK,CAACE,IAAI;kBACjBpF,KAAK,EAAEkF,KAAK,CAACE;gBACf,CAAC,CAAC;gBACFd,MAAM,CAACY,KAAK,CAACE,IAAI,CAAC,GAAGF,KAAK,CAACZ,MAAM;cACnC,CAAC,CAAC;cACFH,kBAAkB,CAACa,MAAM,CAAC;cAC1BX,YAAY,CAACC,MAAM,CAAC;cACpB,MAAM;gBAAEe;cAAY,CAAC,GAAG3B,KAAK;cAC7B,MAAM4B,KAAK,GAAGhB,MAAM,CAACe,WAAW,CAAC;cACjC,IAAIC,KAAK,EAAE;gBACT,MAAMC,SAAc,GAAGD,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC,CAACP,GAAG,CAAEQ,CAAM,IAAK;kBACtD,OAAO;oBACL1F,KAAK,EAAE0F,CAAC;oBACRzF,KAAK,EAAEyF;kBACT,CAAC;gBACH,CAAC,CAAC;gBACFlB,SAAS,CAAC,CAAC,GAAGV,YAAY,EAAE,GAAG0B,SAAS,CAAC,CAAC;cAC5C,CAAC,MAAM;gBACLhB,SAAS,CAAC,CAAC,GAAGV,YAAY,CAAC,CAAC;cAC9B;YACF;UACF,CAAC,CAAC;QACJ;MACF;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAAChB,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhBG,gDAAS,CAAC,MAAM;IACd,IAAIwB,SAAS,CAACkB,OAAO,KAAK,KAAK,EAAE;MAC/B,IAAIrF,EAAE,GAAG,EAAE;MACX,IAAIsF,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,EAAE;QAAA,IAAAC,qBAAA;QACxCxF,EAAE,IAAAwF,qBAAA,GAAIF,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,cAAAC,qBAAA,uBAArCA,qBAAA,CAA4D7F,KAAK;MACxE,CAAC,MAAM,IAAI2F,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,EAAE;QAAA,IAAAE,sBAAA;QACnDzF,EAAE,IAAAyF,sBAAA,GAAIH,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,cAAAE,sBAAA,uBAAzCA,sBAAA,CAAgE9F,KAAK;MAC5E,CAAC,MAAM;QACLK,EAAE,GAAGqD,KAAK,CAACM,SAAS;MACtB;MACA,IAAI3D,EAAE,EAAE;QACN4D,YAAY,CAAC5D,EAAE,CAAC;QAChBoE,gBAAgB,CAACpE,EAAE,EAAEqD,KAAK,CAAC;MAC7B,CAAC,MAAM;QACLqC,KAAK,CAAC,iCAAiC,CAAC;MAC1C;MACAvB,SAAS,CAACkB,OAAO,GAAG,IAAI;IAC1B;EACF,CAAC,EAAE,CAAChC,KAAK,EAAEb,QAAQ,EAAE4B,gBAAgB,CAAC,CAAC;EAEvC,MAAMuB,mBAAmB,GAAIC,CAAM,IAAK;IACtCpD,QAAQ,CAAAX,MAAA,CAAAC,MAAA,KAAMuB,KAAK;MAAEjD,WAAW,EAAEwF,CAAC,CAAC5D,MAAM,CAACrC;IAAK,GAAG;EACrD,CAAC;EAED,MAAMkG,kBAAkB,GAAID,CAAM,IAAK;IACrCpD,QAAQ,CAAAX,MAAA,CAAAC,MAAA,KAAMuB,KAAK;MAAEyC,iBAAiB,EAAEF,CAAC,CAAC5D,MAAM,CAACrC;IAAK,GAAG;EAC3D,CAAC;EAED,MAAMoG,sBAAsB,GAAIpG,KAAU,IAAK;IAC7C6C,QAAQ,CAAAX,MAAA,CAAAC,MAAA,KAAMuB,KAAK;MAAE2B,WAAW,EAAErF;IAAK,GAAG;IAC1C,MAAMsF,KAAK,GAAGlB,SAAS,CAACpE,KAAK,CAAC;IAC9B,IAAIsF,KAAK,EAAE;MACT,MAAMC,SAAc,GAAGD,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC,CAACP,GAAG,CAACQ,CAAC,IAAI;QAC/C,OAAO;UACL1F,KAAK,EAAE0F,CAAC;UACRzF,KAAK,EAAEyF;QACT,CAAC;MACH,CAAC,CAAC;MACFlB,SAAS,CAAC,CAAC,GAAGV,YAAY,EAAE,GAAG0B,SAAS,CAAC,CAAC;IAC5C,CAAC,MAAM;MACLhB,SAAS,CAAC,CAAC,GAAGV,YAAY,CAAC,CAAC;IAC9B;EACF,CAAC;EAED,MAAMwC,oBAAoB,GAAIrG,KAAU,IAAK;IAC3C6C,QAAQ,CAAAX,MAAA,CAAAC,MAAA,KAAMuB,KAAK;MAAE4C,YAAY,EAAEtG;IAAK,GAAG;EAC7C,CAAC;EAED,MAAMuG,aAAa,GAAIvG,KAAU,IAAK;IACpCwG,YAAY,CAACC,OAAO,CAAC,2BAA2B,EAAEzG,KAAK,CAAC;IACxD6C,QAAQ,CAAAX,MAAA,CAAAC,MAAA,KAAMuB,KAAK;MAAEgD,aAAa,EAAE1G;IAAK,GAAG;EAC9C,CAAC;EAED,MAAM;IACJS,WAAW;IACX0F,iBAAiB;IACjBd,WAAW;IACXiB,YAAY;IACZI;EACF,CAAC,GAAGhD,KAAK;EAET,oBACElC,0DAAA,2BACEA,0DAAA,CAAC8B,2DAAU,qBACT9B,0DAAA,CAAC6B,0DAAS;IAACtD,KAAK,EAAC;EAAE,gBACjByB,0DAAA,CAACC,oDAAW;IAAC1B,KAAK,EAAC;EAAc,gBAC/ByB,0DAAA,CAACE,8CAAK;IAAC1B,KAAK,EAAES,WAAY;IAACoC,QAAQ,EAAGoD,CAAM,IAAKD,mBAAmB,CAACC,CAAC;EAAE,EAAG,CAC/D,eACdzE,0DAAA,CAACC,oDAAW;IAAC1B,KAAK,EAAC;EAAa,gBAC9ByB,0DAAA,CAACE,8CAAK;IAAC1B,KAAK,EAAEmG,iBAAkB;IAACtD,QAAQ,EAAGoD,CAAM,IAAKC,kBAAkB,CAACD,CAAC;EAAE,EAAG,CACpE,eACdzE,0DAAA,CAACC,oDAAW;IAAC1B,KAAK,EAAC;EAAY,gBAC7ByB,0DAAA,CAACE,8CAAK;IAACiF,QAAQ,EAAE,IAAK;IAAC3G,KAAK,EAAEgE;EAAU,EAAG,CAC/B,CACJ,CACD,eACbxC,0DAAA,CAAC8B,2DAAU,qBACT9B,0DAAA,CAAC6B,0DAAS;IAACtD,KAAK,EAAC;EAAE,gBACjByB,0DAAA,CAACC,oDAAW;IAAC1B,KAAK,EAAC;EAAkB,gBACnCyB,0DAAA,CAAC4B,+CAAM;IACLT,SAAS,EAAC,uBAAuB;IACjC3C,KAAK,EAAEqF,WAAY;IACnBvD,OAAO,EAAEoC,eAAgB;IACzBrB,QAAQ,EAAGoD,CAAC,IAAKG,sBAAsB,CAACH,CAAC,CAACjG,KAAK,CAAE;IACjD4G,gBAAgB,EAAE;EAAK,EACvB,CACU,eACdpF,0DAAA,CAACC,oDAAW;IAAC1B,KAAK,EAAC;EAAe,gBAChCyB,0DAAA,CAAC4B,+CAAM;IACLT,SAAS,EAAC,uBAAuB;IACjC3C,KAAK,EAAEsG,YAAa;IACpBxE,OAAO,EAAEhC,qDAAc;IACvB+C,QAAQ,EAAGoD,CAAC,IAAKI,oBAAoB,CAACJ,CAAC,CAACjG,KAAK,CAAE;IAC/C4G,gBAAgB,EAAE;EAAK,EACvB,CACU,eACdpF,0DAAA,CAACC,oDAAW;IAAC1B,KAAK,EAAC;EAAQ,gBACzByB,0DAAA,CAAC4B,+CAAM;IACLT,SAAS,EAAC,uBAAuB;IACjC3C,KAAK,EAAE0G,aAAc;IACrB5E,OAAO,EAAEwC,MAAO;IAChBzB,QAAQ,EAAGoD,CAAC,IAAKM,aAAa,CAACN,CAAC,CAACjG,KAAK,CAAE;IACxC4G,gBAAgB,EAAE;EAAK,EACvB,CACU,CACJ,CACD,CACT;AAEV;;;;;;;;;;;;;;;;;;;;;;;;AC7KyD;AACpB;AACiC;AAGjD;AAC6B;AAE3C,MAAMK,UAAU,SAASJ,mEAAqB,CAA+B;EAGlFK,WAAWA,CAACC,gBAAiE,EAAE;IAC7E,KAAK,CAACA,gBAAgB,CAAC;IAACC,eAAA;IAAAA,eAAA;IACxB,IAAI,CAACtD,OAAO,GAAG,IAAIP,8CAAQ,CAAC4D,gBAAgB,CAAClF,QAAQ,CAACQ,YAAY,IAAI,EAAE,EAAE0E,gBAAgB,CAAClF,QAAQ,CAACM,eAAe,IAAI,EAAE,CAAC;IAC1H4E,gBAAgB,CAACpD,IAAI,CAAC9B,QAAQ,GAAGoF,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACJ,gBAAgB,CAAClF,QAAQ,CAAC,CAAC;IACtF,IAAI,CAAC1B,OAAO,GAAG4G,gBAAgB,CAAClF,QAAQ,CAACG,YAAY,IAAI,EAAE;EAC7D;EAEAqC,gBAAgBA,CAACpE,EAAU,EAAE;IAC3B,OAAO0G,0CAAI,CAAC,IAAI,CAACjD,OAAO,CAACW,gBAAgB,CAACpE,EAAE,CAAC,CAACqE,IAAI,CAACC,GAAG,IAAI;MACxD,IAAIC,iBAAiB,GAAG,CAAC,CAAC;MAC1B,IAAID,GAAG,IAAIA,GAAG,CAAC,CAAC,CAAC,EAAE;QACjB,MAAMrE,YAAY,GAAGqE,GAAG,CAAC,CAAC,CAAC;QAC3B,IAAIrE,YAAY,EAAE;UAChBsE,iBAAiB,GAAGxE,iEAAqB,CAACC,EAAE,EAAEC,YAAY,EAAE,IAAI,CAACC,OAAO,CAAC;QAC3E;MACF;MACA,OAAOqE,iBAAiB;IAC1B,CAAC,CAAC,CAAC;EACL;EAEA4C,eAAeA,CAACC,CAAU,EAAoB;IAC5C,OAAOX,iDAAa;EACtB;EAEApD,KAAKA,CAACgE,OAAkC,EAAiC;IACvE,IAAIrH,EAAE,GAAG,EAAE;IACX,IAAIsF,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,EAAE;MAAA,IAAAC,qBAAA;MACxCxF,EAAE,IAAAwF,qBAAA,GAAIF,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,cAAAC,qBAAA,uBAArCA,qBAAA,CAA4D7F,KAAK;IACxE,CAAC,MAAM,IAAI2F,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,EAAE;MAAA,IAAAE,sBAAA;MACnDzF,EAAE,IAAAyF,sBAAA,GAAIH,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,cAAAE,sBAAA,uBAAzCA,sBAAA,CAAgE9F,KAAK;IAC5E;IACA,IAAIK,EAAE,EAAE;MACN,OAAO,IAAI,CAACoE,gBAAgB,CAACpE,EAAE,CAAC,CAACsH,IAAI,CACnCX,8CAAQ,CAAEtD,KAAa,IAAK;QAC1B,IAAIkE,OAAO,GAAGF,OAAO,CAACE,OAAO;QAC7B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,OAAO,CAAC7C,MAAM,EAAE8C,CAAC,EAAE,EAAE;UACvCD,OAAO,CAACC,CAAC,CAAC,GAAA3F,MAAA,CAAAC,MAAA,KACLyF,OAAO,CAACC,CAAC,CAAC,EACVnE,KAAK,CACT;QACH;QACA,OAAO,KAAK,CAACA,KAAK,CAACgE,OAAO,CAAC;MAC7B,CAAC,CAAC,CAAC;IACP,CAAC,MAAM;MACL,OAAO,KAAK,CAAChE,KAAK,CAACgE,OAAO,CAAC;IAC7B;EACF;AACF;;;;;;;;;;;;;;;;;;;;;;AC3DmC;AACK;AAES;AACjB;AAWzB,MAAMrE,SAAmC,GAAGI,IAAA,IAA2E;EAAA,IAA1E;IAAE1D,KAAK;IAAEmI,WAAW;IAAEC,SAAS,GAAG,IAAI;IAAEC,KAAK;IAAEC,UAAU;IAAEC;EAAS,CAAC,GAAA7E,IAAA;EACvH,MAAM8E,MAAM,GAAGR,uDAAU,CAACS,SAAS,CAAC;EACpC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGxF,+CAAQ,CAACiF,SAAS,CAAC;EAC3C,MAAMQ,MAAM,GAAG,SAAAA,CAAA;IAAA,IAACC,QAAQ,GAAAC,SAAA,CAAA9D,MAAA,QAAA8D,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,EAAE;IAAA,OAAM,qBAAoBD,QAAQ,GAAG,GAAG,GAAGA,QAAQ,GAAG,EAAG,IAAG,CAACP,UAAU,IAAItI,KAAK,EAAEmB,OAAO,CAAC,KAAK,EAAE,GAAG,CAAE,EAAC,CAAC6H,WAAW,EAAE;EAAA;EAClJ,oBACEvH,0DAAA;IAAKmB,SAAS,EAAE4F,MAAM,CAACS,IAAK;IAAC,eAAaL,MAAM,CAAC,SAAS;EAAE,GACzDT,WAAW,iBACV1G,0DAAA,CAAAA,uDAAA,qBACEA,0DAAA,CAACwG,+CAAM;IACLkB,IAAI,EAAET,IAAI,GAAG,YAAY,GAAG,aAAc;IAC1CU,IAAI,EAAC,MAAM;IACXC,IAAI,EAAC,IAAI;IACTC,OAAO,EAAC,WAAW;IACnBC,OAAO,EAAGrD,CAAC,IAAK;MACdyC,OAAO,CAAC,CAACD,IAAI,CAAC;MACdxC,CAAC,CAACsD,cAAc,EAAE;IACpB,CAAE;IACFC,KAAK,EAAE;MAAEC,WAAW,EAAE;IAAO,CAAE;IAC/B,eAAad,MAAM,CAAE,YAAWF,IAAI,GAAG,MAAM,GAAG,MAAO,EAAC;EAAE,EAC1D,eACFjH,0DAAA;IACE8H,OAAO,EAAGrD,CAAC,IAAK;MACdyC,OAAO,CAAC,CAACD,IAAI,CAAC;MACdxC,CAAC,CAACsD,cAAc,EAAE;IACpB,CAAE;IACF,eAAaZ,MAAM,CAAE,OAAM;EAAE,gBAE7BnH,0DAAA;IAAGmB,SAAS,EAAE4F,MAAM,CAACmB;EAAa,GAAE3J,KAAK,CAAK,CACzC,eACPyB,0DAAA;IAAMmB,SAAS,EAAE4F,MAAM,CAACoB;EAAsB,GAAEvB,KAAK,GAAGA,KAAK,EAAE,GAAG,SAAS,CAAQ,CAEtF,EACAK,IAAI,iBACHjH,0DAAA;IAAKgI,KAAK,EAAE;MAAEI,OAAO,EAAE,MAAM;MAAEC,SAAS,EAAE9J,KAAK,IAAImI,WAAW,GAAG,MAAM,GAAG,KAAK;MAAE4B,UAAU,EAAE;IAAM,CAAE;IAAC,eAAanB,MAAM,CAAE,UAAS;EAAE,GACnIL,QAAQ,CAEZ,CACG;AAEV,CAAC;AAED,MAAME,SAAS,GAAIuB,KAAoB,IAAK;EAC1C,OAAO;IACLf,IAAI,EAAElB,iDAAG,CAAC;MACRkC,OAAO,EAAED,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC;MACzBC,eAAe,EAAEH,KAAK,CAACI,MAAM,CAACC,UAAU,CAACC,SAAS;MAClDC,YAAY,EAAEP,KAAK,CAACQ,KAAK,CAACD,YAAY,CAAC,CAAC;IAC1C,CAAC,CAAC;IACFZ,YAAY,EAAE5B,iDAAG,CAAC;MAChB2B,WAAW,EAAEM,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC;MAC7BO,KAAK,EAAET,KAAK,CAACI,MAAM,CAACE,SAAS,CAACI;IAChC,CAAC,CAAC;IACFd,qBAAqB,EAAE7B,iDAAG,CAAC;MACzB0C,KAAK,EAAET,KAAK,CAACI,MAAM,CAACM,IAAI,CAACJ,SAAS;MAClCK,QAAQ,EAAEX,KAAK,CAACY,UAAU,CAACC,SAAS,CAACF,QAAQ;MAC7C,SAAS,EAAE;QACTF,KAAK,EAAET,KAAK,CAACI,MAAM,CAACE,SAAS,CAACI;MAChC;IACF,CAAC;EACH,CAAC;AACH,CAAC;AAMM,MAAMnH,UAAqC,GAAGuH,KAAA,IAAkB;EAAA,IAAjB;IAAEvC;EAAS,CAAC,GAAAuC,KAAA;EAChE,oBACErJ,0DAAA,CAACyG,yCAAK;IAAC6C,GAAG,EAAE,GAAI;IAACC,SAAS,EAAC;EAAQ,GAChCzC,QAAQ,CACH;AAEZ,CAAC;;;;;;;;;;;;;;;;;;;;;;ACvFkC;AACuB;AAIjB;AAWlC,MAAML,KAA2B,GAAGxE,IAAA,IAA4B;EAAA,IAA3B;MAAE6E;IAAmB,CAAC,GAAA7E,IAAA;IAAP7B,KAAK,GAAAoJ,6BAAA,CAAAvH,IAAA,EAAAwH,SAAA;EAC9D,MAAM1C,MAAM,GAAGR,uDAAU,CAAC5E,kDAAW,CAAE4G,KAAK,IAAKvB,SAAS,CAACuB,KAAK,EAAEnI,KAAK,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC,CAAC;EAEnF,oBAAOJ,0DAAA;IAAKmB,SAAS,EAAE4F,MAAM,CAACS;EAAK,GAAEV,QAAQ,CAAO;AACtD,CAAC;AAED,MAAME,SAAS,GAAGA,CAACuB,KAAoB,EAAEnI,KAAiB;EAAA,IAAAsJ,gBAAA,EAAAC,WAAA,EAAAC,UAAA;EAAA,OAAM;IAC9DpC,IAAI,EAAElB,iDAAG,CAAC;MACR8B,OAAO,EAAE,MAAM;MACfyB,aAAa,GAAAH,gBAAA,GAAEtJ,KAAK,CAACmJ,SAAS,cAAAG,gBAAA,cAAAA,gBAAA,GAAI,KAAK;MACvCI,QAAQ,EAAE,EAAAH,WAAA,GAAAvJ,KAAK,CAAC2J,IAAI,cAAAJ,WAAA,cAAAA,WAAA,GAAI,IAAI,IAAG,MAAM,GAAGrC,SAAS;MACjD0C,UAAU,EAAE5J,KAAK,CAAC4J,UAAU;MAC5BV,GAAG,EAAEf,KAAK,CAACE,OAAO,EAAAmB,UAAA,GAACxJ,KAAK,CAACkJ,GAAG,cAAAM,UAAA,cAAAA,UAAA,GAAI,CAAC,CAAC;MAClCK,QAAQ,EAAE7J,KAAK,CAAC6J;IAClB,CAAC;EACH,CAAC;AAAA,CAAC;;;;;;;;;;;;;;;;;AC/BF;AACA;AACA,MAAMC,iBAAiB,GAAG,uBAAuB;AACjD,MAAMC,oBAAoB,GAAG,qCAAqC;AAE3D,MAAMpI,QAAQ,CAAC;EAGlB2D,WAAWA,CAACzE,YAAoB,EAAEF,eAAuB,EAAE;IAAA6E,eAAA,uBAF5C,EAAE;IAAAA,eAAA,0BACC,EAAE;IAEhB,IAAI,CAAC3E,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACF,eAAe,GAAGA,eAAe;EAC1C;EAEAkC,gBAAgBA,CAACpE,EAAU,EAAE;IACzB,OAAOuL,KAAK,CAAE,GAAE,IAAI,CAACnJ,YAAa,GAAEiJ,iBAAkB,OAAMrL,EAAG,EAAC,CAAC,CAC5DqE,IAAI,CAACmH,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC;EAC1C;EAEAjH,kBAAkBA,CAACpE,WAAmB,EAAEsL,KAAa,EAAE;IACnD,OAAOH,KAAK,CAAE,GAAE,IAAI,CAACnJ,YAAa,GAAEkJ,oBAAqB,gBAAelL,WAAY,UAASsL,KAAM,EAAC,CAAC,CAChGrH,IAAI,CAACmH,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC;EAC1C;AACJ;;;;;;;;;;;;;;ACfO,MAAMhF,aAA+B,GAAG;EAC7CkF,QAAQ,EAAE;AACZ,CAAC;;AAED;AACA;AACA;;;;;;;;;;ACbA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;ACNiD;AACP;AACe;AACF;AAGhD,MAAME,MAAM,GAAG,IAAID,2DAAgB,CAA2ChF,mDAAU,CAAC,CAC7FkF,eAAe,CAACxK,kEAAY,CAAC,CAC7ByK,cAAc,CAAC5I,gEAAW,CAAC,C","sources":["webpack:///./common-ds/index.ts","webpack:///./components/ConfigEditor.tsx","webpack:///./components/QueryEditor.tsx","webpack:///./datasource.ts","webpack:///./extended/EditorRow.tsx","webpack:///./extended/Stack.tsx","webpack:///./service/index.ts","webpack:///./types.ts","webpack:///external amd \"@emotion/css\"","webpack:///external amd \"@grafana/data\"","webpack:///external amd \"@grafana/runtime\"","webpack:///external amd \"@grafana/ui\"","webpack:///external amd \"react\"","webpack:///external amd \"rxjs\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./module.ts"],"sourcesContent":["export enum MetricEditorMode {\r\n    'Builder',\r\n    'Code',\r\n}\r\n\r\nexport const RESPONSE_TYPE = [\r\n    { label: 'JSON', value: \"JSON\" },\r\n    { label: 'Frame', value: \"Frame\" },\r\n];\r\n\r\nexport const METRIC_EDITOR_MODES = [\r\n    { label: 'Builder', value: MetricEditorMode.Builder },\r\n    { label: 'Code', value: MetricEditorMode.Code },\r\n];\r\n\r\nexport const getCloudElementsQuery = function (id: any, cloudElement: any, awsxUrl: string) {\r\n    return {\r\n        \"cloudIdentifierName\": cloudElement.instanceName,\r\n        \"type\": \"appkube-api\",\r\n        \"queryMode\": \"Metrics\",\r\n        \"matchExact\": true,\r\n        \"expression\": \"\",\r\n        \"id\": \"\",\r\n        \"alias\": \"\",\r\n        \"period\": \"\",\r\n        \"zone\": \"\",\r\n        \"externalId\": \"\",\r\n        \"crossAccountRoleArn\": \"\",\r\n        \"elementType\": cloudElement.elementType,\r\n        \"elementId\": parseInt(id, 10),\r\n        \"cloudIdentifierId\": cloudElement.instanceId,\r\n        \"awsxUrl\": awsxUrl,\r\n        \"logGroupName\": cloudElement.logGroup\r\n    };\r\n};\r\n\r\n\r\nexport const findParam = (paramName: string, url: string) => {\r\n    if (!url) {\r\n        url = location.href;\r\n    }\r\n    paramName = paramName.replace(/[\\[]/, \"\\\\\\[\").replace(/[\\]]/, \"\\\\\\]\");\r\n    const regexS = \"[\\\\?&]\" + paramName + \"=([^&#]*)\";\r\n    const regex = new RegExp(regexS);\r\n    const results = regex.exec(url);\r\n    return results == null ? \"\" : results[1];\r\n}\r\n","import React, { ChangeEvent } from 'react';\r\nimport { InlineField, Input } from '@grafana/ui';\r\nimport { DataSourcePluginOptionsEditorProps } from '@grafana/data';\r\nimport { MyDataSourceOptions } from '../types';\r\n\r\ninterface Props extends DataSourcePluginOptionsEditorProps<MyDataSourceOptions> { }\r\n\r\nexport function ConfigEditor(props: Props) {\r\n  const { onOptionsChange, options } = props;\r\n\r\n  const onAwsxAPIEndpoint = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const jsonData = {\r\n      ...options.jsonData,\r\n      awsxEndPoint: event.target.value,\r\n    };\r\n    onOptionsChange({ ...options, jsonData });\r\n  };\r\n\r\n  const onGrafanaEndPoint = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const jsonData = {\r\n      ...options.jsonData,\r\n      grafanaEndpoint: event.target.value,\r\n    };\r\n    onOptionsChange({ ...options, jsonData });\r\n  };\r\n\r\n  const onAPIEndPointChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const jsonData = {\r\n      ...options.jsonData,\r\n      cmdbEndpoint: event.target.value,\r\n    };\r\n    onOptionsChange({ ...options, jsonData });\r\n  };\r\n\r\n  // Secure field (only sent to the backend)\r\n  // const onAPIKeyChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n  //   onOptionsChange({\r\n  //     ...options,\r\n  //     secureJsonData: {\r\n  //       apiKey: event.target.value,\r\n  //     },\r\n  //   });\r\n  // };\r\n\r\n  // const onResetAPIKey = () => {\r\n  //   onOptionsChange({\r\n  //     ...options,\r\n  //     secureJsonFields: {\r\n  //       ...options.secureJsonFields,\r\n  //       apiKey: false,\r\n  //     },\r\n  //     secureJsonData: {\r\n  //       ...options.secureJsonData,\r\n  //       apiKey: '',\r\n  //     },\r\n  //   });\r\n  // };\r\n\r\n  const { jsonData } = options;\r\n  // const { jsonData, secureJsonFields } = options;\r\n  // const secureJsonData = (options.secureJsonData || {}) as MySecureJsonData;\r\n\r\n  return (\r\n    <div className=\"gf-form-group\">\r\n      <InlineField label=\"Grafana Endpoint\" labelWidth={24}>\r\n        <Input\r\n          onChange={onGrafanaEndPoint}\r\n          value={jsonData.grafanaEndpoint || ''}\r\n          placeholder=\"http://localhost:3001\"\r\n          width={40}\r\n        />\r\n      </InlineField>\r\n      {/* <InlineField label=\"API Key\" labelWidth={12}>\r\n        <SecretInput\r\n          isConfigured={(secureJsonFields && secureJsonFields.apiKey) as boolean}\r\n          value={secureJsonData.apiKey || ''}\r\n          placeholder=\"Test\"\r\n          width={40}\r\n          onReset={onResetAPIKey}\r\n          onChange={onAPIKeyChange}\r\n        />\r\n      </InlineField> */}\r\n      <InlineField label=\"CMDB API Endpoint\" labelWidth={24}>\r\n        <Input\r\n          onChange={onAPIEndPointChange}\r\n          value={jsonData.cmdbEndpoint || ''}\r\n          placeholder=\"https://api.synectiks.net/cmdb\"\r\n          width={40}\r\n        />\r\n      </InlineField>\r\n      <InlineField label=\"AWSX API Endpoint\" labelWidth={24}>\r\n        <Input\r\n          onChange={onAwsxAPIEndpoint}\r\n          value={jsonData.awsxEndPoint || ''}\r\n          placeholder=\"https://api.synectiks.net/cmdb\"\r\n          width={40}\r\n        />\r\n      </InlineField>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport { InlineField, Select, Input } from '@grafana/ui';\r\nimport {\r\n  RESPONSE_TYPE,\r\n  getCloudElementsQuery\r\n} from '../common-ds';\r\nimport { EditorRow, EditorRows } from '../extended/EditorRow';\r\nimport { Services } from '../service';\r\n\r\nexport function QueryEditor({ query, onChange, onRunQuery, datasource }: any) {\r\n  const defaultFrame = [{\r\n    label: \"All\",\r\n    value: \"\"\r\n  }];\r\n  const service = new Services(datasource.meta.jsonData.cmdbEndpoint || \"\", datasource.meta.jsonData.grafanaEndpoint || \"\");\r\n  const [elementId, setElementId] = useState(\"\");\r\n  const [supportedPanels, setSupportedPanels] = useState([]);\r\n  const [allFrames, setAllFrames] = useState<Record<string, string>>({});\r\n  const [frames, setFrames] = useState(defaultFrame);\r\n  const onChanged = useRef(false);\r\n\r\n  const getCloudElements = useCallback((id: string, query: any) => {\r\n    service.getCloudElements(id).then((res: any) => {\r\n      if (res && res[0]) {\r\n        const cloudElement = res[0];\r\n        if (cloudElement) {\r\n          const cloudElementQuery = getCloudElementsQuery(id, cloudElement, datasource.meta.jsonData.awsxEndPoint || \"\");\r\n          query = {\r\n            ...query,\r\n            ...cloudElementQuery\r\n          };\r\n          onChange({ ...query });\r\n          service.getSupportedPanels(cloudElement.elementType.toUpperCase(), \"AWS\").then((res) => {\r\n            if (res && res.length > 0) {\r\n              const panels: any = [];\r\n              const frames: any = {};\r\n              res.map((panel: any) => {\r\n                panels.push({\r\n                  label: panel.name,\r\n                  value: panel.name\r\n                });\r\n                frames[panel.name] = panel.frames;\r\n              });\r\n              setSupportedPanels(panels);\r\n              setAllFrames(frames);\r\n              const { queryString } = query;\r\n              const frame = frames[queryString];\r\n              if (frame) {\r\n                const arrFrames: any = frame.split(\",\").map((f: any) => {\r\n                  return {\r\n                    label: f,\r\n                    value: f\r\n                  };\r\n                });\r\n                setFrames([...defaultFrame, ...arrFrames]);\r\n              } else {\r\n                setFrames([...defaultFrame]);\r\n              }\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }, [onChange]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (onChanged.current === false) {\r\n      let id = \"\";\r\n      if (document.getElementById(\"elementId\")) {\r\n        id = (document.getElementById(\"elementId\") as HTMLInputElement)?.value;\r\n      } else if (document.getElementById(\"var-elementId\")) {\r\n        id = (document.getElementById(\"var-elementId\") as HTMLInputElement)?.value;\r\n      } else {\r\n        id = query.elementId;\r\n      }\r\n      if (id) {\r\n        setElementId(id);\r\n        getCloudElements(id, query);\r\n      } else {\r\n        alert(\"Please set 'elementId' variable\");\r\n      }\r\n      onChanged.current = true;\r\n    }\r\n  }, [query, onChange, getCloudElements]);\r\n\r\n  const onChangeElementType = (e: any) => {\r\n    onChange({ ...query, elementType: e.target.value });\r\n  };\r\n\r\n  const onChangeInstanceID = (e: any) => {\r\n    onChange({ ...query, cloudIdentifierId: e.target.value });\r\n  };\r\n\r\n  const onChangeSupportedPanel = (value: any) => {\r\n    onChange({ ...query, queryString: value });\r\n    const frame = allFrames[value];\r\n    if (frame) {\r\n      const arrFrames: any = frame.split(\",\").map(f => {\r\n        return {\r\n          label: f,\r\n          value: f\r\n        };\r\n      });\r\n      setFrames([...defaultFrame, ...arrFrames]);\r\n    } else {\r\n      setFrames([...defaultFrame]);\r\n    }\r\n  };\r\n\r\n  const onChangeResponseType = (value: any) => {\r\n    onChange({ ...query, responseType: value });\r\n  };\r\n\r\n  const onChangeFrame = (value: any) => {\r\n    localStorage.setItem(\"datasource-selected-frame\", value);\r\n    onChange({ ...query, selectedFrame: value });\r\n  };\r\n\r\n  const {\r\n    elementType,\r\n    cloudIdentifierId,\r\n    queryString,\r\n    responseType,\r\n    selectedFrame\r\n  } = query;\r\n\r\n  return (\r\n    <div>\r\n      <EditorRows>\r\n        <EditorRow label=\"\">\r\n          <InlineField label=\"Element Type\">\r\n            <Input value={elementType} onChange={(e: any) => onChangeElementType(e)} />\r\n          </InlineField>\r\n          <InlineField label=\"Instance ID\">\r\n            <Input value={cloudIdentifierId} onChange={(e: any) => onChangeInstanceID(e)} />\r\n          </InlineField>\r\n          <InlineField label=\"Element ID\">\r\n            <Input disabled={true} value={elementId} />\r\n          </InlineField>\r\n        </EditorRow>\r\n      </EditorRows>\r\n      <EditorRows>\r\n        <EditorRow label=\"\">\r\n          <InlineField label=\"Supported Panels\">\r\n            <Select\r\n              className=\"min-width-12 width-12\"\r\n              value={queryString}\r\n              options={supportedPanels}\r\n              onChange={(e) => onChangeSupportedPanel(e.value)}\r\n              menuShouldPortal={true}\r\n            />\r\n          </InlineField>\r\n          <InlineField label=\"Response Type\">\r\n            <Select\r\n              className=\"min-width-12 width-12\"\r\n              value={responseType}\r\n              options={RESPONSE_TYPE}\r\n              onChange={(e) => onChangeResponseType(e.value)}\r\n              menuShouldPortal={true}\r\n            />\r\n          </InlineField>\r\n          <InlineField label=\"Frames\">\r\n            <Select\r\n              className=\"min-width-12 width-12\"\r\n              value={selectedFrame}\r\n              options={frames}\r\n              onChange={(e) => onChangeFrame(e.value)}\r\n              menuShouldPortal={true}\r\n            />\r\n          </InlineField>\r\n        </EditorRow>\r\n      </EditorRows>\r\n    </div>\r\n  );\r\n}\r\n","import { DataSourceInstanceSettings, CoreApp, DataQueryRequest, DataQueryResponse } from '@grafana/data';\r\nimport { DataSourceWithBackend } from '@grafana/runtime';\r\nimport { Services } from './service';\r\nimport { MyQuery, MyDataSourceOptions, DEFAULT_QUERY } from './types';\r\nimport {\r\n  getCloudElementsQuery\r\n} from './common-ds';\r\nimport { Observable, from, mergeMap } from 'rxjs';\r\n\r\nexport class DataSource extends DataSourceWithBackend<MyQuery, MyDataSourceOptions> {\r\n  service;\r\n  awsxUrl;\r\n  constructor(instanceSettings: DataSourceInstanceSettings<MyDataSourceOptions>) {\r\n    super(instanceSettings);\r\n    this.service = new Services(instanceSettings.jsonData.cmdbEndpoint || \"\", instanceSettings.jsonData.grafanaEndpoint || \"\");\r\n    instanceSettings.meta.jsonData = JSON.parse(JSON.stringify(instanceSettings.jsonData));\r\n    this.awsxUrl = instanceSettings.jsonData.awsxEndPoint || \"\";\r\n  }\r\n\r\n  getCloudElements(id: string) {\r\n    return from(this.service.getCloudElements(id).then(res => {\r\n      let cloudElementQuery = {};\r\n      if (res && res[0]) {\r\n        const cloudElement = res[0];\r\n        if (cloudElement) {\r\n          cloudElementQuery = getCloudElementsQuery(id, cloudElement, this.awsxUrl);\r\n        }\r\n      }\r\n      return cloudElementQuery;\r\n    }));\r\n  };\r\n\r\n  getDefaultQuery(_: CoreApp): Partial<MyQuery> {\r\n    return DEFAULT_QUERY\r\n  }\r\n\r\n  query(request: DataQueryRequest<MyQuery>): Observable<DataQueryResponse> {\r\n    let id = \"\";\r\n    if (document.getElementById(\"elementId\")) {\r\n      id = (document.getElementById(\"elementId\") as HTMLInputElement)?.value;\r\n    } else if (document.getElementById(\"var-elementId\")) {\r\n      id = (document.getElementById(\"var-elementId\") as HTMLInputElement)?.value;\r\n    }\r\n    if (id) {\r\n      return this.getCloudElements(id).pipe(\r\n        mergeMap((query: object) => {\r\n          let targets = request.targets;\r\n          for (let i = 0; i < targets.length; i++) {\r\n            targets[i] = {\r\n              ...targets[i],\r\n              ...query\r\n            }\r\n          }\r\n          return super.query(request);\r\n        }));\r\n    } else {\r\n      return super.query(request);\r\n    }\r\n  }\r\n}\r\n","import { css } from '@emotion/css';\r\nimport React, { useState } from 'react';\r\nimport { GrafanaTheme2 } from '@grafana/data';\r\nimport { useStyles2, Button } from '@grafana/ui';\r\nimport { Stack } from './Stack';\r\n\r\ninterface EditorRowProps {\r\n  label: string;\r\n  collapsible?: boolean;\r\n  title?: () => string | React.ReactNode;\r\n  collapsed?: boolean;\r\n  dataTestId?: string;\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const EditorRow: React.FC<EditorRowProps> = ({ label, collapsible, collapsed = true, title, dataTestId, children }) => {\r\n  const styles = useStyles2(getStyles);\r\n  const [show, setShow] = useState(collapsed);\r\n  const testId = (compType = '') => `infinity-query-row${compType ? '-' + compType : ''}-${(dataTestId || label).replace(/\\ /g, '-')}`.toLowerCase();\r\n  return (\r\n    <div className={styles.root} data-testid={testId('wrapper')}>\r\n      {collapsible && (\r\n        <>\r\n          <Button\r\n            icon={show ? 'angle-down' : 'angle-right'}\r\n            fill=\"text\"\r\n            size=\"sm\"\r\n            variant=\"secondary\"\r\n            onClick={(e) => {\r\n              setShow(!show);\r\n              e.preventDefault();\r\n            }}\r\n            style={{ marginRight: '10px' }}\r\n            data-testid={testId(`collapse-${show ? 'hide' : 'show'}`)}\r\n          />\r\n          <span\r\n            onClick={(e) => {\r\n              setShow(!show);\r\n              e.preventDefault();\r\n            }}\r\n            data-testid={testId(`title`)}\r\n          >\r\n            <b className={styles.collapseTile}>{label}</b>\r\n          </span>\r\n          <span className={styles.collapseTileSecondary}>{title ? title() : 'Options'}</span>\r\n        </>\r\n      )}\r\n      {show && (\r\n        <div style={{ display: 'flex', marginTop: label && collapsible ? '15px' : '0px', marginLeft: '0px' }} data-testid={testId(`children`)}>\r\n          {children}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getStyles = (theme: GrafanaTheme2) => {\r\n  return {\r\n    root: css({\r\n      padding: theme.spacing(1),\r\n      backgroundColor: theme.colors.background.secondary,\r\n      borderRadius: theme.shape.borderRadius(1),\r\n    }),\r\n    collapseTile: css({\r\n      marginRight: theme.spacing(1),\r\n      color: theme.colors.secondary.text,\r\n    }),\r\n    collapseTileSecondary: css({\r\n      color: theme.colors.text.secondary,\r\n      fontSize: theme.typography.bodySmall.fontSize,\r\n      '&:hover': {\r\n        color: theme.colors.secondary.text,\r\n      },\r\n    }),\r\n  };\r\n};\r\n\r\ninterface EditorRowsProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const EditorRows: React.FC<EditorRowsProps> = ({ children }) => {\r\n  return (\r\n    <Stack gap={0.5} direction=\"column\">\r\n      {children}\r\n    </Stack>\r\n  );\r\n};\r\n","import { css } from '@emotion/css';\r\nimport React, { CSSProperties, useCallback } from 'react';\r\n\r\nimport { GrafanaTheme2 } from '@grafana/data';\r\n\r\nimport { useStyles2 } from '@grafana/ui';\r\n\r\ninterface StackProps {\r\n  direction?: CSSProperties['flexDirection'];\r\n  alignItems?: CSSProperties['alignItems'];\r\n  wrap?: boolean;\r\n  gap?: number;\r\n  flexGrow?: CSSProperties['flexGrow'];\r\n  children?: React.ReactNode;\r\n}\r\n\r\nexport const Stack: React.FC<StackProps> = ({ children, ...props }) => {\r\n  const styles = useStyles2(useCallback((theme) => getStyles(theme, props), [props]));\r\n\r\n  return <div className={styles.root}>{children}</div>;\r\n};\r\n\r\nconst getStyles = (theme: GrafanaTheme2, props: StackProps) => ({\r\n  root: css({\r\n    display: 'flex',\r\n    flexDirection: props.direction ?? 'row',\r\n    flexWrap: props.wrap ?? true ? 'wrap' : undefined,\r\n    alignItems: props.alignItems,\r\n    gap: theme.spacing(props.gap ?? 2),\r\n    flexGrow: props.flexGrow,\r\n  }),\r\n});\r\n","// const BASE_URL = \"https://api.synectiks.net/cmdb\";\r\n// const APPKUBE_URL=\"http://localhost:3001\"\r\nconst GET_CLOUD_ELEMENT = \"/cloud-element/search\";\r\nconst GET_SUPPORTED_PANELS = \"/cloud-element-supported-api/search\";\r\n\r\nexport class Services {\r\n    cmdbEndpoint = \"\";\r\n    grafanaEndpoint = \"\";\r\n    constructor(cmdbEndpoint: string, grafanaEndpoint: string) {\r\n        this.cmdbEndpoint = cmdbEndpoint;\r\n        this.grafanaEndpoint = grafanaEndpoint;\r\n    }\r\n\r\n    getCloudElements(id: string) {\r\n        return fetch(`${this.cmdbEndpoint}${GET_CLOUD_ELEMENT}?id=${id}`)\r\n            .then(response => response.json());\r\n    }\r\n\r\n    getSupportedPanels(elementType: string, cloud: string) {\r\n        return fetch(`${this.cmdbEndpoint}${GET_SUPPORTED_PANELS}?elementType=${elementType}&cloud=${cloud}`)\r\n            .then(response => response.json());\r\n    }\r\n}\r\n","import { DataQuery, DataSourceJsonData } from '@grafana/data';\r\n\r\nexport interface MyQuery extends DataQuery {\r\n  queryText?: string;\r\n  constant: number;\r\n}\r\n\r\nexport const DEFAULT_QUERY: Partial<MyQuery> = {\r\n  constant: 6.5,\r\n};\r\n\r\n/**\r\n * These are options configured for each DataSource instance\r\n */\r\nexport interface MyDataSourceOptions extends DataSourceJsonData {\r\n  grafanaEndpoint?: string;\r\n  cmdbEndpoint?: string;\r\n  awsxEndPoint?: string;\r\n}\r\n\r\n/**\r\n * Value that is used in the backend, but never sent over HTTP to the frontend\r\n */\r\nexport interface MySecureJsonData {\r\n  apiKey?: string;\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__emotion_css__;","module.exports = __WEBPACK_EXTERNAL_MODULE__grafana_data__;","module.exports = __WEBPACK_EXTERNAL_MODULE__grafana_runtime__;","module.exports = __WEBPACK_EXTERNAL_MODULE__grafana_ui__;","module.exports = __WEBPACK_EXTERNAL_MODULE_react__;","module.exports = __WEBPACK_EXTERNAL_MODULE_rxjs__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { DataSourcePlugin } from '@grafana/data';\r\nimport { DataSource } from './datasource';\r\nimport { ConfigEditor } from './components/ConfigEditor';\r\nimport { QueryEditor } from './components/QueryEditor';\r\nimport { MyQuery, MyDataSourceOptions } from './types';\r\n\r\nexport const plugin = new DataSourcePlugin<DataSource, MyQuery, MyDataSourceOptions>(DataSource)\r\n  .setConfigEditor(ConfigEditor)\r\n  .setQueryEditor(QueryEditor);\r\n"],"names":["MetricEditorMode","RESPONSE_TYPE","label","value","METRIC_EDITOR_MODES","Builder","Code","getCloudElementsQuery","id","cloudElement","awsxUrl","instanceName","elementType","parseInt","instanceId","logGroup","findParam","paramName","url","location","href","replace","regexS","regex","RegExp","results","exec","React","InlineField","Input","ConfigEditor","props","onOptionsChange","options","onAwsxAPIEndpoint","event","jsonData","Object","assign","awsxEndPoint","target","onGrafanaEndPoint","grafanaEndpoint","onAPIEndPointChange","cmdbEndpoint","createElement","className","labelWidth","onChange","placeholder","width","useEffect","useRef","useState","useCallback","Select","EditorRow","EditorRows","Services","QueryEditor","_ref","query","onRunQuery","datasource","defaultFrame","service","meta","elementId","setElementId","supportedPanels","setSupportedPanels","allFrames","setAllFrames","frames","setFrames","onChanged","getCloudElements","then","res","cloudElementQuery","getSupportedPanels","toUpperCase","length","panels","map","panel","push","name","queryString","frame","arrFrames","split","f","current","document","getElementById","_document$getElementB","_document$getElementB2","alert","onChangeElementType","e","onChangeInstanceID","cloudIdentifierId","onChangeSupportedPanel","onChangeResponseType","responseType","onChangeFrame","localStorage","setItem","selectedFrame","disabled","menuShouldPortal","DataSourceWithBackend","DEFAULT_QUERY","from","mergeMap","DataSource","constructor","instanceSettings","_defineProperty","JSON","parse","stringify","getDefaultQuery","_","request","pipe","targets","i","css","useStyles2","Button","Stack","collapsible","collapsed","title","dataTestId","children","styles","getStyles","show","setShow","testId","compType","arguments","undefined","toLowerCase","root","Fragment","icon","fill","size","variant","onClick","preventDefault","style","marginRight","collapseTile","collapseTileSecondary","display","marginTop","marginLeft","theme","padding","spacing","backgroundColor","colors","background","secondary","borderRadius","shape","color","text","fontSize","typography","bodySmall","_ref2","gap","direction","_objectWithoutPropertiesLoose","_excluded","_props$direction","_props$wrap","_props$gap","flexDirection","flexWrap","wrap","alignItems","flexGrow","GET_CLOUD_ELEMENT","GET_SUPPORTED_PANELS","fetch","response","json","cloud","constant","DataSourcePlugin","plugin","setConfigEditor","setQueryEditor"],"sourceRoot":""}